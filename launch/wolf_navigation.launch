<?xml version="1.0" ?>
<launch>

    <arg name="robot_name" default="spot"/>
    <arg name="world_name" default="empty" />
    <arg name="task_period" default="0.001" />
    <arg name="gazebo_debug" default="false" />
    <arg name="gazebo_gui" default="false" />
    <arg name="rqt_gui" default="false" />
    <arg name="input_device" default="keyboard" />
    <arg name="gazebo" default="true" />
    <arg name="engine" default="ode" />
    <arg name="launch_controller" default="true" />
    <arg name="local_planner" default="dwa_local_planner/DWAPlannerROS" />
    <arg name="global_frame" value="map"/>
    <arg name="odom_frame" value="odom"/>
    <arg name="base_frame" value="base_footprint"/>
    <arg name="scan_topic" value="scan"/>
    <arg name="velodyne_pointcloud_topic" value="velodyne_pointcloud"/>
    <arg name="depth_camera_name" value="d435"/>
    <arg name="robot_params" default="$(eval find(arg('robot_name') + '_description') + '/params/navigation')"/>
    <arg name="mapping" default="false" />
    <arg name="map_file" default="$(find wolf_navigation)/maps/$(arg world_name)_map.yaml" />


    <!-- Convert from PointCould2 to Laserscan -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" output="screen">
        <remap from="cloud_in" to="/$(arg velodyne_pointcloud_topic)"/>
    </node>

    <!-- Run hector slam -->
    <include file="$(find hector_mapping)/launch/mapping_default.launch" if="$(arg mapping)">
        <arg name="base_frame" default="$(arg base_frame)"/>
        <arg name="odom_frame" default="$(arg odom_frame)"/>
        <arg name="pub_map_odom_transform" default="true"/>
        <arg name="scan_topic" default="$(arg scan_topic)"/>
    </include>

    <!-- run AMCL localization -->
    <include file="$(find wolf_navigation)/launch/wolf_localization.launch" unless="$(arg mapping)">
        <arg name="base_frame" default="$(arg base_frame)"/>
        <arg name="odom_frame" default="$(arg odom_frame)"/>
        <arg name="scan_topic" default="$(arg scan_topic)"/>
        <arg name="map_file" default="$(arg map_file)" />
        <arg name="robot_params" default="$(arg robot_params)" />
    </include>

    <!-- Run move base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(arg robot_params)/costmap_common_params.yaml" command="load" ns="global_costmap" subst_value="true"/>
        <rosparam file="$(arg robot_params)/costmap_common_params.yaml" command="load" ns="local_costmap" subst_value="true"/>
        <rosparam file="$(arg robot_params)/move_base_params.yaml" command="load" subst_value="true"/>
        <rosparam file="$(arg robot_params)/local_costmap_params.yaml" command="load" subst_value="true"/>
        <rosparam file="$(arg robot_params)/global_costmap_params.yaml" command="load" subst_value="true"/>
        <rosparam file="$(arg robot_params)/base_local_planner_params.yaml" command="load" subst_value="true"/>
        <param name="base_local_planner" value="$(arg local_planner)"/>
        <remap from="cmd_vel" to="/$(arg robot_name)/wolf_controller/twist"/>
    </node>

    <!-- Run follow waypoints node -->
    <node pkg="wolf_navigation" type="follow_waypoints_node" respawn="false" name="follow_waypoints_node" output="screen"/>

    <!-- Launch the controller -->
    <include file="$(find wolf_controller)/launch/wolf_controller_bringup.launch" if="$(arg launch_controller)" >
        <arg name="sensors" value="true" />
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="task_period" value="$(arg task_period)" />
        <arg name="rqt_gui" value="$(arg rqt_gui)"/>
        <arg name="rviz_gui" value="false"/>
        <arg name="gazebo_gui" value="$(arg gazebo_gui)"/>
        <arg name="gazebo_debug" value="$(arg gazebo_debug)"/>
        <arg name="gazebo" default="$(arg gazebo)" />
        <arg name="input_device" value="$(arg input_device)"/>
        <arg name="engine" value="$(arg engine)"/>
    </include>

    <!-- rviz -->
    <node name="wolf_rviz" pkg="rviz" type="rviz" output="screen"
          args="$(eval '-d '+find(arg('robot_name')+'_description')+'/rviz/'+arg('robot_name')+'_nav.rviz')"
          if="$(arg mapping)"/>

    <node name="wolf_rviz" pkg="rviz" type="rviz" output="screen"
          args="$(eval '-d '+find(arg('robot_name')+'_description')+'/rviz/'+arg('robot_name')+'_nav_loc.rviz')"
          unless="$(arg mapping)"/>

</launch>
